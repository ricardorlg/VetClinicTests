{"name":"the one where Ricardo tries to register a new owner using the clinic API with an existing owner","id":"the-pet-clinic-should-allow-to-register-a-pet-owner-in-the-system;the-one-where-ricardo-tries-to-register-a-new-owner-using-the-clinic-api-with-an-existing-owner","scenarioId":"classpath:features/owners/owners_registration:the one where Ricardo tries to register a new owner using the clinic API with an existing owner","methodName":"the one where Ricardo tries to register a new owner using the clinic API with an existing owner","testSteps":[{"number":1,"description":"Given Ricardo has already registered an owner with the following information\n| firstName | lastName | address | city | phone |\n| Peter | Anderson | nassaukade 161-2 | Amsterdam | 0629416321 |","duration":26928,"startTime":"2024-09-15T15:56:32.503955360Z[Etc/UTC]","result":"SUCCESS","precondition":false,"level":0,"children":[{"number":2,"description":"Ricardo registers a new Owner using the API","duration":6500,"startTime":"2024-09-15T15:56:52.915975793Z[Etc/UTC]","result":"SUCCESS","precondition":false,"level":1,"children":[{"number":3,"description":"Ricardo executes a POST on the resource /owners","duration":6463,"startTime":"2024-09-15T15:56:52.943519856Z[Etc/UTC]","result":"SUCCESS","precondition":false,"level":2,"children":[{"number":4,"description":"POST http://localhost:32769/owners","duration":0,"startTime":"2024-09-15T15:58:11.075574644Z[Etc/UTC]","result":"SUCCESS","restQuery":{"method":"POST","path":"http://localhost:32769/owners","content":"{\n    \"firstName\": \"Peter\",\n    \"lastName\": \"Anderson\",\n    \"address\": \"nassaukade 161-2\",\n    \"city\": \"Amsterdam\",\n    \"telephone\": \"0629416321\"\n}","contentType":"application/json","requestHeaders":"Accept\u003d*/*\n\t\t\t\tContent-Type\u003dapplication/json","requestCookies":"","responseHeaders":"Content-Length: 0\nDate: Sun, 15 Sep 2024 15:56:59 GMT","responseCookies":"","statusCode":201},"precondition":false,"level":3}]}]}]},{"number":5,"description":"When Kelly sends a registration request using the clinic API with the same data used by Ricardo","duration":8247,"startTime":"2024-09-15T15:56:59.432783992Z[Etc/UTC]","result":"SUCCESS","precondition":false,"level":0,"children":[{"number":6,"description":"Kelly registers a new Owner using the API","duration":209,"startTime":"2024-09-15T15:57:07.468600068Z[Etc/UTC]","result":"SUCCESS","precondition":false,"level":1,"children":[{"number":7,"description":"Kelly executes a POST on the resource /owners","duration":186,"startTime":"2024-09-15T15:57:07.490407646Z[Etc/UTC]","result":"SUCCESS","precondition":false,"level":2,"children":[{"number":8,"description":"POST http://localhost:32769/owners","duration":0,"startTime":"2024-09-15T15:58:11.076303846Z[Etc/UTC]","result":"SUCCESS","restQuery":{"method":"POST","path":"http://localhost:32769/owners","content":"{\n    \"firstName\": \"Peter\",\n    \"lastName\": \"Anderson\",\n    \"address\": \"nassaukade 161-2\",\n    \"city\": \"Amsterdam\",\n    \"telephone\": \"0629416321\"\n}","contentType":"application/json","requestHeaders":"Accept\u003d*/*\n\t\t\t\tContent-Type\u003dapplication/json","requestCookies":"","responseHeaders":"Content-Length: 0\nDate: Sun, 15 Sep 2024 15:57:07 GMT","responseCookies":"","statusCode":201},"precondition":false,"level":3}]}]}]},{"number":9,"description":"Then the system should return a 400 response code","duration":63398,"startTime":"2024-09-15T15:57:07.680064912Z[Etc/UTC]","result":"FAILURE","precondition":false,"level":0,"children":[{"number":10,"description":"For Kelly: Then the response status should be (400)","duration":10034,"startTime":"2024-09-15T15:57:08.028452144Z[Etc/UTC]","exception":{"errorType":"java.lang.AssertionError","message":"\nExpected: \u003c400\u003e\n     but: was \u003c201\u003e","stackTrace":[{"declaringClass":"com.ricardorlg.vetclinic.stepdefinitions.CommonStepDefinitions","methodName":"theSystemShouldReturnAResponseCode","fileName":"CommonStepDefinitions.java","lineNumber":48}]},"result":"FAILURE","precondition":false,"level":1}]},{"number":11,"description":"And the response body should include the error with code AlreadyExists and field owner","duration":0,"startTime":"2024-09-15T15:57:18.097877680Z[Etc/UTC]","result":"SKIPPED","precondition":false,"level":0}],"userStory":{"id":"classpath:features/owners/owners_registration","storyName":"The Pet Clinic should allow to register a pet owner in the system","displayName":"The Pet Clinic should allow to register a pet owner in the system","path":"owners/owners_registration","pathElements":[{"name":"owners","description":""},{"name":"owners_registration","description":""}],"narrative":"  As a VetClinic Manager\n  I would like to be able to register a new owner in the system\n  In order to handle all the pets and visits made by him","type":"feature"},"title":"the one where Ricardo tries to register a new owner using the clinic API with an existing owner","description":"","tags":[{"name":"Linux","type":"context","displayName":"Linux"},{"name":"Chrome","type":"context","displayName":"Chrome"},{"name":"Assertion error","type":"error","displayName":"Assertion error"},{"name":"Chrome, Linux","type":"context","displayName":"Chrome, Linux"},{"name":"Api","type":"tag","displayName":"Api"}],"startTime":"2024-09-15T15:56:32.337882871Z[Etc/UTC]","endTime":"2024-09-15T15:57:18.119137001Z[Etc/UTC]","duration":98737,"rule":{"name":"The system should not allow to register an owner with same personal information of an existing owner","description":""},"testFailureCause":{"errorType":"net.thucydides.model.domain.MultipleAssertionErrors","message":"\nThe following 2 assertions failed:\n1) Expected: \u003c400\u003e\n     but: was \u003c201\u003e\n2) Expected: \u003c400\u003e\n     but: was \u003c201\u003e\n","stackTrace":[]},"testFailureClassname":"net.thucydides.model.domain.MultipleAssertionErrors","testFailureMessage":"\nThe following 2 assertions failed:\n1) Expected: \u003c400\u003e\n     but: was \u003c201\u003e\n2) Expected: \u003c400\u003e\n     but: was \u003c201\u003e\n","testFailureSummary":"\nThe following 2 assertions failed:\n1) Expected: \u003c400\u003e\n     but: was \u003c201\u003e\n2) Expected: \u003c400\u003e\n     but: was \u003c201\u003e\n","projectKey":"","annotatedResult":"FAILURE","isManualTestingUpToDate":false,"context":"chrome,linux","manual":false,"testSource":"Cucumber","actors":[{"name":"Ricardo"},{"name":"Kelly"}],"result":"FAILURE"}