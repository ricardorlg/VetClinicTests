{
"report": {
"title": "BackBase QA Challenge",
"tagCategoryTitle": "Category",
"version": "",
"date": "2024-09-16T08:50:30.016250988"
},
"results": {
"counts": {
"total": 25,
"success": 22,
"pending": 0,
"ignored": 0,
"skipped": 0,
"aborted": 0,
"failure": 3,
"error": 0,
"compromised": 0
},
"percentages": {
"success": 88,
"pending": 0,
"ignored": 0,
"skipped": 0,
"aborted": 0,
"failure": 12,
"error": 0,
"compromised": 0
},
"totalTestDuration": 662533,
"totalClockDuration": 110750,
"minTestDuration": 382,
"maxTestDuration": 55690,
"averageTestDuration": 26483
},
"resultsByFeature": [
  {
  "featureName": "The Pet Clinic should allow to filter the owners in the system",
  "scenarios": [
    {
    "title": "the one where Ricardo filters the owners by unknown city",
    "result": "success",
      "outcomes": [
        {
        "result": "success",
        "description": "",
        "errorMessage": ""
        }
      ]
    },
    {
    "title": "the one where Ricardo filters the owners by first and last name",
    "result": "success",
      "outcomes": [
        {
        "result": "success",
        "description": "",
        "errorMessage": ""
        }
      ]
    },
    {
    "title": "the one where Ricardo filters the owners by address",
    "result": "success",
      "outcomes": [
        {
        "result": "success",
        "description": "",
        "errorMessage": ""
        }
      ]
    },
    {
    "title": "the one where Ricardo filters the owners by city",
    "result": "success",
      "outcomes": [
        {
        "result": "success",
        "description": "",
        "errorMessage": ""
        }
      ]
    },
    {
    "title": "the one where Ricardo filters the owners by last name",
    "result": "success",
      "outcomes": [
        {
        "result": "success",
        "description": "",
        "errorMessage": ""
        }
      ]
    },
    {
    "title": "the one where Ricardo filters the owners by phone",
    "result": "success",
      "outcomes": [
        {
        "result": "success",
        "description": "",
        "errorMessage": ""
        }
      ]
    },
    {
    "title": "the one where Ricardo filters the owners by first name",
    "result": "success",
      "outcomes": [
        {
        "result": "success",
        "description": "",
        "errorMessage": ""
        }
      ]
    }
  ]
  },
  {
  "featureName": "The Pet Clinic should allow to manage the owners information",
  "scenarios": [
    {
    "title": "the one where Ricardo wants to delete an owner using the clinic API",
    "result": "failure",
      "outcomes": [
        {
        "result": "failure",
        "description": "",
        "errorMessage": "Assertion error: Expected: <200> but: was <405>"
        }
      ]
    },
    {
    "title": "the one where Ricardo wants to update the personal information of an owner using the Web application",
    "result": "success",
      "outcomes": [
        {
        "result": "success",
        "description": "",
        "errorMessage": ""
        }
      ]
    },
    {
    "title": "the one where Ricardo wants to see the personal information of an owner using the clinic API",
    "result": "success",
      "outcomes": [
        {
        "result": "success",
        "description": "",
        "errorMessage": ""
        }
      ]
    },
    {
    "title": "the one where Ricardo wants to see the list of all owners using the clinic API",
    "result": "success",
      "outcomes": [
        {
        "result": "success",
        "description": "",
        "errorMessage": ""
        }
      ]
    },
    {
    "title": "the one where Ricardo wants to see the personal information of an owner with pets and visits using the Web application",
    "result": "success",
      "outcomes": [
        {
        "result": "success",
        "description": "    Jean Coleman is an owner registered in the system with pets and visits",
        "errorMessage": ""
        }
      ]
    },
    {
    "title": "the one where Ricardo wants to see the personal information of an owner using the Web application",
    "result": "success",
      "outcomes": [
        {
        "result": "success",
        "description": "    John Thompson is a new owner registered in the system so he doesn't have any pets or visits yet",
        "errorMessage": ""
        }
      ]
    }
  ]
  },
  {
  "featureName": "The Pet Clinic should allow to register a pet owner in the system",
  "scenarios": [
    {
    "title": "the one where Ricardo tries to register a new owner using the clinic API with an existing owner",
    "result": "failure",
      "outcomes": [
        {
        "result": "failure",
        "description": "",
        "errorMessage": "Assertion error: Expected: <400> but: was <201>"
        }
      ]
    },
    {
    "title": "the one where Ricardo tries to register a new owner using the Web form with an existing owner",
    "result": "failure",
      "outcomes": [
        {
        "result": "failure",
        "description": "",
        "errorMessage": "Assertion error: There is no alert present"
        }
      ]
    },
    {
    "title": "1: the one where Kelly tries to register a new owner using the clinic API with invalid data ( [1]",
    "result": "success",
      "outcomes": [
        {
        "result": "success",
        "description": "1: the one where Kelly tries to register a new owner using the clinic API with invalid data ({firstName=[empty], lastName=perez, address=address, city=amsterdam, phone=0629416300, code_error=NotEmpty, field_error=firstName})",
        "errorMessage": ""
        }
      ]
    },
    {
    "title": "2: the one where Kelly tries to register a new owner using the clinic API with invalid data ( [2]",
    "result": "success",
      "outcomes": [
        {
        "result": "success",
        "description": "2: the one where Kelly tries to register a new owner using the clinic API with invalid data ({firstName=ricardo, lastName=[empty], address=address, city=amsterdam, phone=0629416300, code_error=NotEmpty, field_error=lastName})",
        "errorMessage": ""
        }
      ]
    },
    {
    "title": "3: the one where Kelly tries to register a new owner using the clinic API with invalid data ( [3]",
    "result": "success",
      "outcomes": [
        {
        "result": "success",
        "description": "3: the one where Kelly tries to register a new owner using the clinic API with invalid data ({firstName=ricardo, lastName=perez, address=[empty], city=amsterdam, phone=0629416300, code_error=NotEmpty, field_error=address})",
        "errorMessage": ""
        }
      ]
    },
    {
    "title": "4: the one where Kelly tries to register a new owner using the clinic API with invalid data ( [4]",
    "result": "success",
      "outcomes": [
        {
        "result": "success",
        "description": "4: the one where Kelly tries to register a new owner using the clinic API with invalid data ({firstName=ricardo, lastName=perez, address=address, city=[empty], phone=0629416300, code_error=NotEmpty, field_error=city})",
        "errorMessage": ""
        }
      ]
    },
    {
    "title": "5: the one where Kelly tries to register a new owner using the clinic API with invalid data ( [5]",
    "result": "success",
      "outcomes": [
        {
        "result": "success",
        "description": "5: the one where Kelly tries to register a new owner using the clinic API with invalid data ({firstName=ricardo, lastName=perez, address=address, city=amsterdam, phone=[empty], code_error=NotEmpty, field_error=telephone})",
        "errorMessage": ""
        }
      ]
    },
    {
    "title": "6: the one where Kelly tries to register a new owner using the clinic API with invalid data ( [6]",
    "result": "success",
      "outcomes": [
        {
        "result": "success",
        "description": "6: the one where Kelly tries to register a new owner using the clinic API with invalid data ({firstName=ricardo, lastName=perez, address=address, city=amsterdam, phone=abc, code_error=Digits, field_error=telephone})",
        "errorMessage": ""
        }
      ]
    },
    {
    "title": "7: the one where Kelly tries to register a new owner using the clinic API with invalid data ( [7]",
    "result": "success",
      "outcomes": [
        {
        "result": "success",
        "description": "7: the one where Kelly tries to register a new owner using the clinic API with invalid data ({firstName=ricardo, lastName=perez, address=address, city=amsterdam, phone=12312312312, code_error=Digits, field_error=telephone})",
        "errorMessage": ""
        }
      ]
    },
    {
    "title": "the one where Ricardo registers a new owner using the Web form with all mandatory data",
    "result": "success",
      "outcomes": [
        {
        "result": "success",
        "description": "",
        "errorMessage": ""
        }
      ]
    },
    {
    "title": "the one where Kelly tries to register a new owner using the Web form with invalid data",
    "result": "success",
      "outcomes": [
        {
        "result": "success",
        "description": "",
        "errorMessage": ""
        }
      ]
    },
    {
    "title": "the one where Ricardo registers a new owner using the clinic API with all mandatory data",
    "result": "success",
      "outcomes": [
        {
        "result": "success",
        "description": "",
        "errorMessage": ""
        }
      ]
    }
  ]
  }
],
"frequentFailures": [
  {
  "name": "Multiple assertion errors",
  "count": 3
  }
],
"unstableFeatures": [
  {
  "name": "The Pet Clinic should allow to register a pet owner in the system",
  "failurePercentage": 16
  },
  {
  "name": "The Pet Clinic should allow to manage the owners information",
  "failurePercentage": 16
  }
],
"coverage": [
],
"tags": [
  {
  "tagType": "",
  "tagResults": [
    {
    "tagName": "Web",
    "count": 13
    },
    {
    "tagName": "Api",
    "count": 12
    }
  ]
  },
  {
  "tagType": "context",
  "tagResults": [
    {
    "tagName": "Chrome, Linux",
    "count": 25
    }
  ]
  },
  {
  "tagType": "error",
  "tagResults": [
    {
    "tagName": "Assertion error",
    "count": 3
    }
  ]
  }
]
}