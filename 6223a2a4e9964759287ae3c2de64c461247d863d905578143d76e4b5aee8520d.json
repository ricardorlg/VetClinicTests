{"name":"the one where Ricardo tries to register an already existing owner using the clinic API","id":"the-pet-clinic-should-allow-to-register-a-pet-owner-in-the-system;the-one-where-ricardo-tries-to-register-an-already-existing-owner-using-the-clinic-api","scenarioId":"classpath:features/owners/owners_registration:the one where Ricardo tries to register an already existing owner using the clinic API","methodName":"the one where Ricardo tries to register an already existing owner using the clinic API","testSteps":[{"number":1,"description":"Given Ricardo has already registered an owner with the following information\n| firstName | lastName | address | city | phone |\n| Peter | Anderson | nassaukade 161-2 | Amsterdam | 0629446321 |","duration":230,"startTime":"2024-09-16T23:59:24.617604965Z[Etc/UTC]","result":"SUCCESS","precondition":false,"level":0,"children":[{"number":2,"description":"Ricardo registers a new Owner using the API","duration":88,"startTime":"2024-09-16T23:59:24.737746703Z[Etc/UTC]","result":"SUCCESS","precondition":false,"level":1}]},{"number":3,"description":"When Kelly sends a registration request using the clinic API with the same data used by Ricardo","duration":620,"startTime":"2024-09-16T23:59:24.847882691Z[Etc/UTC]","result":"SUCCESS","precondition":false,"level":0,"children":[{"number":4,"description":"Kelly registers a new Owner using the API","duration":200,"startTime":"2024-09-16T23:59:25.266216538Z[Etc/UTC]","result":"SUCCESS","precondition":false,"level":1}]},{"number":5,"description":"Then the system should return a 400 response code","duration":82090,"startTime":"2024-09-16T23:59:25.468052324Z[Etc/UTC]","result":"FAILURE","precondition":false,"level":0,"children":[{"number":6,"description":"For Kelly: Then the response status should be (400)","duration":10041,"startTime":"2024-09-16T23:59:25.469421458Z[Etc/UTC]","exception":{"errorType":"java.lang.AssertionError","message":"\nExpected: \u003c400\u003e\n     but: was \u003c201\u003e","stackTrace":[{"declaringClass":"com.ricardorlg.vetclinic.stepdefinitions.CommonStepDefinitions","methodName":"theSystemShouldReturnAResponseCode","fileName":"CommonStepDefinitions.java","lineNumber":48}]},"result":"FAILURE","precondition":false,"level":1}]},{"number":7,"description":"And the response body should include the error with code AlreadyExists and field owner","duration":0,"startTime":"2024-09-16T23:59:35.873844634Z[Etc/UTC]","result":"SKIPPED","precondition":false,"level":0}],"userStory":{"id":"classpath:features/owners/owners_registration","storyName":"The Pet Clinic should allow to register a pet owner in the system","displayName":"The Pet Clinic should allow to register a pet owner in the system","path":"owners/owners_registration","pathElements":[{"name":"owners","description":""},{"name":"owners_registration","description":""}],"narrative":"  As a VetClinic Manager\n  I would like to be able to register a new owner in the system\n  In order to handle all the pets and visits made by him","type":"feature"},"title":"the one where Ricardo tries to register an already existing owner using the clinic API","description":"","tags":[{"name":"Linux","type":"context","displayName":"Linux"},{"name":"Chrome","type":"context","displayName":"Chrome"},{"name":"Assertion error","type":"error","displayName":"Assertion error"},{"name":"Chrome, Linux","type":"context","displayName":"Chrome, Linux"},{"name":"Api","type":"tag","displayName":"Api"}],"startTime":"2024-09-16T23:59:24.616006191Z[Etc/UTC]","endTime":"2024-09-16T23:59:35.875924807Z[Etc/UTC]","duration":11259,"rule":{"name":"The system should not allow to register an owner with same personal information of an existing owner","description":""},"testFailureCause":{"errorType":"net.thucydides.model.domain.MultipleAssertionErrors","message":"\nThe following 2 assertions failed:\n1) Expected: \u003c400\u003e\n     but: was \u003c201\u003e\n2) Expected: \u003c400\u003e\n     but: was \u003c201\u003e\n","stackTrace":[]},"testFailureClassname":"net.thucydides.model.domain.MultipleAssertionErrors","testFailureMessage":"\nThe following 2 assertions failed:\n1) Expected: \u003c400\u003e\n     but: was \u003c201\u003e\n2) Expected: \u003c400\u003e\n     but: was \u003c201\u003e\n","testFailureSummary":"\nThe following 2 assertions failed:\n1) Expected: \u003c400\u003e\n     but: was \u003c201\u003e\n2) Expected: \u003c400\u003e\n     but: was \u003c201\u003e\n","projectKey":"","annotatedResult":"FAILURE","isManualTestingUpToDate":false,"context":"chrome,linux","manual":false,"testSource":"Cucumber","actors":[{"name":"Ricardo"},{"name":"Kelly"}],"result":"FAILURE"}